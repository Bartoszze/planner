{"version":3,"file":"static/js/556.17aaaffe.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/context/ReorderContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/WillChangeMotionValue.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/components/Reorder/Group.mjs","../node_modules/framer-motion/dist/es/components/Reorder/utils/check-reorder.mjs","../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/transform.mjs","../node_modules/framer-motion/dist/es/value/use-combine-values.mjs","../node_modules/framer-motion/dist/es/value/use-transform.mjs","../node_modules/framer-motion/dist/es/value/use-computed.mjs","../node_modules/framer-motion/dist/es/components/Reorder/Item.mjs","../node_modules/framer-motion/dist/es/components/Reorder/index.mjs"],"sourcesContent":["const noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","import { createContext } from 'react';\n\nconst ReorderContext = createContext(null);\n\nexport { ReorderContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            if (!scheduleHandoffComplete) {\n                scheduleHandoffComplete = true;\n                queueMicrotask(completeHandoff);\n            }\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.HandoffComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.22\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\n\nexport { WillChangeMotionValue };\n","import { WillChangeMotionValue } from './WillChangeMotionValue.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.22\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.22 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { jsx } from 'react/jsx-runtime';\nimport { invariant } from '../../utils/errors.mjs';\nimport { forwardRef, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { checkReorder } from './utils/check-reorder.mjs';\n\nfunction ReorderGroup({ children, as = \"ul\", axis = \"y\", onReorder, values, ...props }, externalRef) {\n    const Component = useConstant(() => motion(as));\n    const order = [];\n    const isReordering = useRef(false);\n    invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n    const context = {\n        axis,\n        registerItem: (value, layout) => {\n            // If the entry was already added, update it rather than adding it again\n            const idx = order.findIndex((entry) => value === entry.value);\n            if (idx !== -1) {\n                order[idx].layout = layout[axis];\n            }\n            else {\n                order.push({ value: value, layout: layout[axis] });\n            }\n            order.sort(compareMin);\n        },\n        updateOrder: (item, offset, velocity) => {\n            if (isReordering.current)\n                return;\n            const newOrder = checkReorder(order, item, offset, velocity);\n            if (order !== newOrder) {\n                isReordering.current = true;\n                onReorder(newOrder\n                    .map(getValue)\n                    .filter((value) => values.indexOf(value) !== -1));\n            }\n        },\n    };\n    useEffect(() => {\n        isReordering.current = false;\n    });\n    return (jsx(Component, { ...props, ref: externalRef, ignoreStrict: true, children: jsx(ReorderContext.Provider, { value: context, children: children }) }));\n}\nconst Group = forwardRef(ReorderGroup);\nfunction getValue(item) {\n    return item.value;\n}\nfunction compareMin(a, b) {\n    return a.layout.min - b.layout.min;\n}\n\nexport { Group, ReorderGroup };\n","import { moveItem } from '../../../utils/array.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction checkReorder(order, value, offset, velocity) {\n    if (!velocity)\n        return order;\n    const index = order.findIndex((item) => item.value === value);\n    if (index === -1)\n        return order;\n    const nextOffset = velocity > 0 ? 1 : -1;\n    const nextItem = order[index + nextOffset];\n    if (!nextItem)\n        return order;\n    const item = order[index];\n    const nextLayout = nextItem.layout;\n    const nextItemCenter = mixNumber(nextLayout.min, nextLayout.max, 0.5);\n    if ((nextOffset === 1 && item.layout.max + offset > nextItemCenter) ||\n        (nextOffset === -1 && item.layout.min + offset < nextItemCenter)) {\n        return moveItem(order, index, index + nextOffset);\n    }\n    return order;\n}\n\nexport { checkReorder };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { interpolate } from './interpolate.mjs';\n\nconst isCustomValueType = (v) => {\n    return v && typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, {\n        mixer: getMixer(outputRange[0]),\n        ...options,\n    });\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","import { useMotionValue } from './use-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { cancelFrame, frame } from '../frameloop/frame.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.preRender(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useComputed } from './use-computed.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","import { collectMotionValues } from './index.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\n\nfunction useComputed(compute) {\n    /**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * will be saved into this array.\n     */\n    collectMotionValues.current = [];\n    compute();\n    const value = useCombineMotionValues(collectMotionValues.current, compute);\n    /**\n     * Synchronously close session of collectMotionValues.\n     */\n    collectMotionValues.current = undefined;\n    return value;\n}\n\nexport { useComputed };\n","import { jsx } from 'react/jsx-runtime';\nimport { invariant } from '../../utils/errors.mjs';\nimport { forwardRef, useContext } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useMotionValue } from '../../value/use-motion-value.mjs';\nimport { useTransform } from '../../value/use-transform.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction useDefaultMotionValue(value, defaultValue = 0) {\n    return isMotionValue(value) ? value : useMotionValue(defaultValue);\n}\nfunction ReorderItem({ children, style = {}, value, as = \"li\", onDrag, layout = true, ...props }, externalRef) {\n    const Component = useConstant(() => motion(as));\n    const context = useContext(ReorderContext);\n    const point = {\n        x: useDefaultMotionValue(style.x),\n        y: useDefaultMotionValue(style.y),\n    };\n    const zIndex = useTransform([point.x, point.y], ([latestX, latestY]) => latestX || latestY ? 1 : \"unset\");\n    invariant(Boolean(context), \"Reorder.Item must be a child of Reorder.Group\");\n    const { axis, registerItem, updateOrder } = context;\n    return (jsx(Component, { drag: axis, ...props, dragSnapToOrigin: true, style: { ...style, x: point.x, y: point.y, zIndex }, layout: layout, onDrag: (event, gesturePoint) => {\n            const { velocity } = gesturePoint;\n            velocity[axis] &&\n                updateOrder(value, point[axis].get(), velocity[axis]);\n            onDrag && onDrag(event, gesturePoint);\n        }, onLayoutMeasure: (measured) => registerItem(value, measured), ref: externalRef, ignoreStrict: true, children: children }));\n}\nconst Item = forwardRef(ReorderItem);\n\nexport { Item, ReorderItem };\n","import { Group } from './Group.mjs';\nimport { Item } from './Item.mjs';\n\nconst Reorder = {\n    Group,\n    Item,\n};\n\nexport { Reorder };\n"],"names":["noop","any","warning","invariant","ReorderContext","createContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","has","step","schedule","queue","arguments","length","undefined","add","cancel","delete","process","frameData","clear","forEach","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","Math","max","min","keepAlive","immediate","i","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","visualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","Boolean","animationType","createProjectionNode","useInsertionEffect","wantsHandoff","HandoffComplete","updateFeatures","animationState","animateChanges","completeHandoff","options","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","LayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","value","children","jsx","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","x","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","willChange","applyWillChange","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","getValueState","resolveVariantFromProps","definition","velocity","useConstant","init","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","acceleratedValues","getWillChangeName","addUniqueItem","arr","item","push","removeItem","index","splice","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","addWillChange","memberName","forEachDefinition","list","resolved","transitionEnd","transition","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","valueTarget","frame","cancelFrame","requestAnimationFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","isNullish","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","getOptimisedAppearId","WillChangeMotionValue","counts","styleName","prevCount","hasRemoved","newCount","addValueToWillChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","checkVariantsDidChange","createTypeState","prevResolvedValues","createState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createAnimationState","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","removeWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","isDirty","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","isRenderScheduled","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","Group","as","onReorder","order","isReordering","registerItem","idx","compareMin","updateOrder","newOrder","nextOffset","nextItem","nextLayout","nextItemCenter","fromIndex","toIndex","startIndex","endIndex","moveItem","checkReorder","ignoreStrict","useMotionValue","setLatest","useState","isCustomValueType","useCombineMotionValues","combineValues","updateValue","useTransform","inputRangeOrTransformer","outputRange","compute","useComputed","useImmediate","argOffset","inputValue","useListTransform","useDefaultMotionValue","Item","latestX","latestY","gesturePoint","onLayoutMeasure","measured","Reorder"],"sourceRoot":""}