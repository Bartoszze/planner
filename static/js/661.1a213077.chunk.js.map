{"version":3,"file":"static/js/661.1a213077.chunk.js","mappings":"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","sources":["Components/ReusableComponents/Button/index.js","Components/ReusableComponents/Input/index.js","Components/ReusableComponents/Notifications/index.js","Components/TasksInfo/index.js","Components/Categories/index.js","Components/AddCategory/index.js","Views/HomePage/index.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./index.sass\";\r\n\r\nconst Button = (props) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const buttonStyle = {\r\n    backgroundColor: hover ? props.hoverColor : props.color,\r\n  };\r\n\r\n  return (\r\n    <button\r\n      style={buttonStyle}\r\n      onMouseEnter={() => setHover(true)}\r\n      onMouseLeave={() => setHover(false)}\r\n      className=\"buttonStyle\"\r\n      onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { useEffect, useRef } from \"react\";\r\nimport \"./index.sass\";\r\n\r\nconst SearchBar = ({ onInputChange }) => {\r\n  const inputRef = useRef(null);\r\n\r\n  const handleInputChange = () => {\r\n    onInputChange(inputRef.current.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const input = inputRef.current;\r\n    input.addEventListener(\"input\", handleInputChange);\r\n\r\n    return () => {\r\n      input.removeEventListener(\"input\", handleInputChange);\r\n    };\r\n  }, []);\r\n\r\n  return <input className=\"searchBar\" ref={inputRef} type=\"text\" />;\r\n};\r\n\r\nexport default SearchBar;\r\n","import { toast } from \"react-toastify\";\r\nimport \"./index.sass\";\r\n\r\nexport const notifySuccess = (text) =>\r\n  toast.success(text, {\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n\r\nexport const notifyWarn = (text) =>\r\n  toast.warn(text, {\r\n    position: \"top-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"colored\",\r\n  });\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./index.sass\";\r\n\r\nconst Taskquantity = () => {\r\n  const [quantity, setquantity] = useState(0);\r\n  const categories = JSON.parse(localStorage.getItem(\"categories\"));\r\n\r\n  useEffect(() => {\r\n    setquantity(categories ? categories.length : null);\r\n  }, [categories]);\r\n\r\n  return (\r\n    <p className=\"task\">\r\n      {quantity === 0 ? \"Brak\" : quantity}\r\n      {quantity > 4 || quantity === 0 ? \" kategorii\" : \" kategorie\"}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Taskquantity;\r\n","import { useEffect, useState, useCallback } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport errorCover from \"../../Assets/Images/404.png\";\r\nimport add from \"./../../Assets/Images/add.png\";\r\nimport \"./index.sass\";\r\n\r\nconst Categories = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const getLocal = () => JSON.parse(localStorage.getItem(\"categories\"));\r\n  const [localStorageCategories, setLocalStorageCategories] =\r\n    useState(getLocal);\r\n\r\n  useEffect(() => {\r\n    setLocalStorageCategories(props.localStorage);\r\n  }, [props.localStorage]);\r\n\r\n  useEffect(() => {\r\n    if (localStorageCategories === null) {\r\n      localStorage.setItem(\"categories\", JSON.stringify([]));\r\n      setShow(true);\r\n    } else {\r\n      setShow(!localStorageCategories?.length ? true : false);\r\n    }\r\n  }, [localStorageCategories, show]);\r\n\r\n  useEffect(() => {\r\n    if (props.find) {\r\n      const filteredCategories = localStorageCategories.filter((element) =>\r\n        element.name.includes(props.find)\r\n      );\r\n      setLocalStorageCategories(\r\n        filteredCategories.length === 0 ? getLocal : filteredCategories\r\n      );\r\n    } else {\r\n      setLocalStorageCategories(getLocal);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.find]);\r\n\r\n  const onImageError = useCallback((e) => {\r\n    e.target.src = errorCover;\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"categories\">\r\n      {show && (\r\n        <div className=\"categories__add\">\r\n          <img src={add} alt=\"Add post\" fetchpriority=\"high\" />\r\n          <h2>Brak katologów</h2>\r\n          <p>Dodaj katalog aby zobaczyć go tutaj.</p>\r\n        </div>\r\n      )}\r\n      {localStorageCategories &&\r\n        localStorageCategories.map((category) => (\r\n          <Link key={category.name} to={\"/category/\" + category.name}>\r\n            <div className=\"categories__block\">\r\n              <img\r\n                className=\"categories__block--img\"\r\n                src={category.url}\r\n                onError={onImageError}\r\n                alt=\"Category cover\"\r\n              />\r\n              <h2>{category.name}</h2>\r\n              <p>\r\n                {category.tasks.length}\r\n                {category.tasks.length > 1 && category.tasks.length < 5\r\n                  ? \" zadania\"\r\n                  : \" zadań\"}\r\n              </p>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import { useState } from \"react\";\r\nimport Button from \"../ReusableComponents/Button\";\r\nimport SearchBar from \"../ReusableComponents/Input\";\r\nimport { notifyWarn, notifySuccess } from \"../ReusableComponents/Notifications\";\r\nimport \"./index.sass\";\r\n\r\nconst AddCategory = (props) => {\r\n  const [newCategory, setNewCategory] = useState(\"\");\r\n  const [urlIMG, setUrlIMG] = useState(\"\");\r\n  const [closeAnimation, setCloseAnimation] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const localStorageCategories = JSON.parse(localStorage.getItem(\"categories\"));\r\n\r\n  const addStyle = {\r\n    opacity: closeAnimation ? 0 : 1,\r\n  };\r\n\r\n  const close = () => {\r\n    setCloseAnimation(true);\r\n    setTimeout(() => {\r\n      setCloseAnimation(false);\r\n      setShow(false);\r\n    }, 100);\r\n  };\r\n\r\n  const addCat = () => {\r\n    if (!urlIMG || !newCategory) {\r\n      notifyWarn(\r\n        \"Dodanie kategorii nie powiodło się, sprawdź czy oba pola są uzupełnione.\"\r\n      );\r\n    } else {\r\n      if (localStorageCategories.find((e) => e.name === newCategory)) {\r\n        notifyWarn(\r\n          \"Dodanie kategorii nie powiodło się, kategoria juz istnieje.\"\r\n        );\r\n      } else {\r\n        const ob = {\r\n          name: newCategory,\r\n          url: urlIMG,\r\n          tasks: [],\r\n        };\r\n        const newLocal = [...localStorageCategories, ob];\r\n        localStorage.setItem(\"categories\", JSON.stringify(newLocal));\r\n        notifySuccess(\"Dodano kategorię: \" + ob.name);\r\n        close();\r\n        props.onClick();\r\n      }\r\n    }\r\n  };\r\n\r\n  const visibility = () => {\r\n    if (show === false) {\r\n      setShow(true);\r\n    } else {\r\n      close();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        hoverColor=\"rgba(74, 222, 128, 0.3)\"\r\n        text=\"Dodaj nową kategorie\"\r\n        color=\"rgba(249, 250, 251, 0.3)\"\r\n        onClick={visibility}\r\n      />\r\n      <div className={show ? \"addC\" : \"addC hide\"} style={addStyle}>\r\n        <h2>Nazwa</h2>\r\n        <SearchBar onInputChange={setNewCategory} />\r\n        <h2>Url okładki</h2>\r\n        <SearchBar onInputChange={setUrlIMG} />\r\n        <div className=\"addC__buttons\">\r\n          <Button\r\n            color=\"#AE505A\"\r\n            onClick={close}\r\n            hoverColor=\"rgba(248, 113, 113, 0.3)\"\r\n            text=\"Anuluj\"\r\n          />\r\n          <Button\r\n            color=\"#549C77\"\r\n            hoverColor=\"rgba(74, 222, 128, 0.3)\"\r\n            text=\"Dodaj\"\r\n            onClick={addCat}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddCategory;\r\n","import Taskquantity from \"../../Components/TasksInfo\";\r\nimport Categories from \"../../Components/Categories\";\r\nimport AddCategory from \"../../Components/AddCategory\";\r\nimport { useState } from \"react\";\r\nimport SearchBar from \"../../Components/ReusableComponents/Input\";\r\n\r\nconst HomePage = () => {\r\n  const [search, setSearch] = useState();\r\n  const getLocal = () => JSON.parse(localStorage.getItem(\"categories\"));\r\n  const [localStorageCategories, setLocalStorageCategories] =\r\n    useState(getLocal);\r\n\r\n  const refreshStorage = () => {\r\n    setLocalStorageCategories(getLocal);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Kategorie</h1>\r\n      <Taskquantity />\r\n      <SearchBar onInputChange={setSearch} />\r\n      <Categories find={search} localStorage={localStorageCategories} />\r\n      <AddCategory onClick={refreshStorage} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["props","hover","setHover","useState","buttonStyle","backgroundColor","hoverColor","color","_jsx","style","onMouseEnter","onMouseLeave","className","onClick","children","text","_ref","onInputChange","inputRef","useRef","handleInputChange","current","value","useEffect","input","addEventListener","removeEventListener","ref","type","notifySuccess","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","notifyWarn","warn","Taskquantity","quantity","setquantity","categories","JSON","parse","localStorage","getItem","length","_jsxs","show","setShow","getLocal","localStorageCategories","setLocalStorageCategories","setItem","stringify","find","filteredCategories","filter","element","name","includes","onImageError","useCallback","e","target","src","errorCover","add","alt","fetchpriority","map","category","Link","to","url","onError","tasks","newCategory","setNewCategory","urlIMG","setUrlIMG","closeAnimation","setCloseAnimation","addStyle","opacity","close","setTimeout","_Fragment","Button","visibility","SearchBar","addCat","ob","newLocal","HomePage","search","setSearch","Categories","AddCategory","refreshStorage"],"sourceRoot":""}